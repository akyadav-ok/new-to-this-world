#include <iostream>
using namespace std;

class myarray
{	private:
		int size;
		int *arr;
		
	public:
		myarray(int s)
		{
			size=s;
			arr=new int[size];
			
		}
		int fill()
		{   
		   cout<<"Enter Array Elements :"<<endl;
			for(int i=0;i<size;i++)
			{
				cin>>arr[i];
				
				
			}
			return size-1;
		}
		void display()
		{   cout<<"Array is : ";
			for(int i=0;i<size;i++)
			{
				cout<<arr[i]<<" ";
				
			}
			
		}
		int linearSearch(int ent)
		{
			for(int i=0;i<size;i++)
			{
				if(arr[i]==ent)
				   return i;
			}
			return -1;
		}
		
		void bubble_sort()
		{
			for (int j=0;j<size-1;j++)
			{
			
			 for (int i=0;i<size-j-1;i++)
			 {
				if (arr[i]>arr[i+1])
				{  
				    int then=arr[i+1];
				     arr[i+1]=arr[i];
				     arr[i]=then;
					 	
				}
			 }
		    }
			cout<<"::: Sorted Array Is :- ";
			for (int i=0;i<size;i++)
			{   
				cout<<arr[i]<<" ";
				
			}
			
		}
		int binSearch(int ent,int b,int l )
		{        
		    if(b<=l){   
		        int big=b;int last=l;
		    
			    int mid =(big+last)/2;
				if (arr[mid]==ent)
				{
					
				    cout<<"Element found at index "<<mid<<endl;
					
				}
				if (arr[mid]>ent)
			     {
			     	
			     	return binSearch(ent,b,mid-1);
				 }
				if (arr[mid]<ent)
				 {
					return binSearch(ent,mid+1,l);	
				 } 	
			}
		    else 
		     {  
		     	cout<<"Element not found !! ";
		     	cout<<endl;
		     	
			 }
		   				
		}
		void selection_sort()
	    {  int min_index;
	    	for (int i =0;i<size;i++)
	    	{  
	    	    min_index=i;
	    		for (int j=i+1;j<size;j++)
	    		{
	    			if (arr[j]<arr[min_index])
	    			    
	    			     min_index=j;
	    			
					int then=arr[min_index];
					arr[min_index]=arr[i];
					arr[i]=then;
					     
				}
			}
			cout<<endl;
			cout<<"Sorted Array is :: ";
			for (int k=0;k<size;k++)
			{ 
				cout<<arr[k]<<" ";
				
			}
		}
		void insertion_sort()
	    {   
	    	int k,j;
	    	for (int i=1;i<size;i++)
	    	{
	    		k=arr[i];
	    		j=i-1;
	    		
	    		while(j>=0 && arr[j]>k)
	    		{
	    			arr[j+1]=arr[j];
	    			j=j-1;
				}
				arr[j+1]=k;
			}
			cout<<endl;
			cout<<"sorted Array is :: ";
			for(int p=0;p<size;p++)
			{
				cout<<arr[p]<<" ";
			}
	    
		}
		void merge_sort(int s,int l)
	    {   
	    	if (s>=l)
	    	    return ;
	    	int m=(s+l)/2;
	    	merge_sort(s,m);
	    	merge_sort(m+1,l);
	    	merge(s,m,l);
	   	    
		}
		void merge(int s,int m,int l)
		{
		
		    int *temp= new int[s+l-1];
		    int i=s,j=m+1,k=0;
		    while(i<=m && j<=l)
		    {
		    	if (arr[i]<=arr[j])
		    		temp[k++]=arr[i++];
		    	else
		    		temp[k++]=arr[j++];
		    		
				
			}
		    while(i<=m)
		    	temp[k++]=arr[i++];
		    while(j<=l)
		    	temp[k++]=arr[j++];
		    
		    k=0;
		    i=s;
		    
		    while (i<=l)
		    	arr[i++]=temp[k++];
		    	
		    delete []temp;
		
		
		
		
			cout<<endl;
			for(int p=0;p<size;p++)
		   {
			cout<<arr[p]<<" ";
		   }
		
		}
		
			void Qs(int s, int l)
		{
			if(s>=l)
				return ;
			
			int p=position(s,l);
			Qs(s,p-1);
			Qs(p+1,l);
			
			
		}
		int position(int s, int l)
		{
			int temp=s;
			int star;
			
			for(int i=s;i<=l-1; i++)
			{
				if(arr[i]<=arr[l])
				{
					star=arr[i];
					arr[i]=arr[temp];
					arr[temp]=star;
					temp++;
				}
			}
			star=arr[temp];
			arr[temp]=arr[l];
			arr[l]=star;
			
			return temp;
			
		}
		
	
};

int main()
{   int n;
    cout<<" Enter array size ";
    cin>>n;
	myarray m1(n);
	int last=m1.fill();
	cout<<endl;
	m1.display();
	cout<<endl;
	x:
	int ch;
	cout<<"1. BUbble Sort ."<<endl;
	cout<<"2. Selection Sort ."<<endl;
	cout<<"3. Insertion Sort ."<<endl;
	cout<<"4. Binary Search  ."<<endl;
	cout<<"5 . Linear Search  ."<<endl;
	cout<<"6 . Merge Sort ."<<endl;
	cout<<"7 . Quick Sort ."<<endl;
	cout<<"Enter your choice: ch   ";
	cin >>ch;
	cout<<endl;
	 if (ch==1)
	 {
	 	m1.bubble_sort();
	 }
	 if (ch==2)
	 {
	 	m1.selection_sort();
	 }
	 if (ch==3)
	 {
	 	 m1.insertion_sort();
	 	
	 }
	 int k;
	 if (ch==4)
	 {	cout<<"Enter Element to be searched :";
		cin>>k;
		cout<<endl;
    	cout<<"Element to be searched : k :-  "<<k<<endl;
	 	 
	 	int z= m1.binSearch(k,0,last);
	 	cout<<"Element Found at Index :  "<<z<<endl;
	 	
	 }
	 if (ch==5)
	 {	
	 	cout<<"Enter Element to be searched :";
		cin>>k;
		cout<<endl;
    	cout<<"Element to be searched : k :-  "<<k<<endl;
	 	int y=m1.linearSearch(k);
	 	cout<<"Element Found at Index :  "<<y<<endl;
	 }
	 int s=0;
	 if (ch==6)
	 {
	 	m1.merge_sort(0,last);
	 }
	 if (ch==7)
	 {
	 	m1.Qs(0,last);
	 }
	 if (ch>=8)
	 {
	 	cout<<"Invalid Choice !! "<<endl;
	 }
    char h;
	cout<<"Want to Continue : (y/n) : ";
	cin>>h;
	if (ch=='y')
	    goto x;
	
	
	
	
	
	
}
